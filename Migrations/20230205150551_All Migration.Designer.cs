// <auto-generated />
using System;
using DevNot2021.Entities.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DevNot2021.Migrations
{
    [DbContext(typeof(DevNotContext))]
    [Migration("20230205150551_All Migration")]
    partial class AllMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Turkish_CI_AS")
                .HasAnnotation("ProductVersion", "6.0.0-rc.2.21480.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DevNot2021.Entities.AbAbone", b =>
                {
                    b.Property<decimal>("IdAbone")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("IdAbone"), 1L, 1);

                    b.Property<string>("AboneAdi")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal>("AboneNo")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("AboneSoyadi")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("AcikAdres")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("IdAboneGrubu")
                        .HasColumnType("int");

                    b.Property<int>("IdAboneTipi")
                        .HasColumnType("int");

                    b.Property<int>("IdBolge")
                        .HasColumnType("int");

                    b.Property<int>("IdSozlesmeTipi")
                        .HasColumnType("int");

                    b.Property<string>("KimlikNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("MalSahibi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SozlesmeBaslangicTarihi")
                        .HasColumnType("date");

                    b.Property<DateTime?>("SozlesmeBitisTarihi")
                        .HasColumnType("date");

                    b.Property<decimal>("SozlesmeNo")
                        .HasColumnType("numeric(18,0)");

                    b.HasKey("IdAbone");

                    b.HasIndex("IdAboneTipi");

                    b.HasIndex("IdBolge");

                    b.HasIndex("IdSozlesmeTipi");

                    b.ToTable("AB_ABONE", (string)null);
                });

            modelBuilder.Entity("DevNot2021.Entities.AbAboneGrubu", b =>
                {
                    b.Property<int>("IdAboneGrubu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAboneGrubu"), 1L, 1);

                    b.Property<string>("AboneGrubuAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("KismiOdemeYapabilir")
                        .HasColumnType("bit");

                    b.HasKey("IdAboneGrubu");

                    b.ToTable("AB_ABONE_GRUBU", (string)null);
                });

            modelBuilder.Entity("DevNot2021.Entities.AbAboneTipi", b =>
                {
                    b.Property<int>("IdAboneTipi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAboneTipi"), 1L, 1);

                    b.Property<string>("AboneTipiAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IdAboneSektor")
                        .HasColumnType("int");

                    b.Property<int?>("IdAboneTipiGib")
                        .HasColumnType("int");

                    b.Property<bool>("ResmiDaire")
                        .HasColumnType("bit");

                    b.Property<string>("SabitAl")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("SahaKontrol")
                        .HasColumnType("bit");

                    b.HasKey("IdAboneTipi");

                    b.ToTable("AB_ABONE_TIPI", (string)null);
                });

            modelBuilder.Entity("DevNot2021.Entities.CompaniesInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Company_Name");

                    b.Property<long?>("CompanyNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("Company_Number");

                    b.Property<string>("ConnName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Conn_Name");

                    b.Property<string>("ConnStr")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Conn_Str");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Companies_Info", (string)null);
                });

            modelBuilder.Entity("DevNot2021.Entities.DbMenu", b =>
                {
                    b.Property<int>("IdMenu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMenu"), 1L, 1);

                    b.Property<long?>("ActionNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("Client")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ClientIp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CreUser")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("HasChild")
                        .HasColumnType("bit");

                    b.Property<int>("IdMenuParent")
                        .HasColumnType("int");

                    b.Property<int?>("IdSecurityController")
                        .HasColumnType("int");

                    b.Property<string>("ImageClass")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsParent")
                        .HasColumnType("bit");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<string>("RoutingPath")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdMenu");

                    b.ToTable("DB_MENU", (string)null);
                });

            modelBuilder.Entity("DevNot2021.Entities.DbRole", b =>
                {
                    b.Property<int>("IdRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRole"), 1L, 1);

                    b.Property<string>("Client")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ClientIp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CreUser")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRole");

                    b.ToTable("DB_ROLE", (string)null);
                });

            modelBuilder.Entity("DevNot2021.Entities.DbRoleMenu", b =>
                {
                    b.Property<int>("IdRoleMenu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRoleMenu"), 1L, 1);

                    b.Property<string>("Client")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ClientIp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreUser")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("IdMenu")
                        .HasColumnType("int");

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.HasKey("IdRoleMenu");

                    b.ToTable("DB_ROLE_MENU", (string)null);
                });

            modelBuilder.Entity("DevNot2021.Entities.DbSecurityAction", b =>
                {
                    b.Property<int>("IdSecurityAction")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSecurityAction"), 1L, 1);

                    b.Property<string>("ActionName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long?>("ActionNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("Client")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ClientIp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CreUser")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int?>("IdSecurityController")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<bool?>("OpenStatus")
                        .HasColumnType("bit");

                    b.Property<int?>("OpenStatusUserId")
                        .HasColumnType("int");

                    b.HasKey("IdSecurityAction");

                    b.HasIndex("IdSecurityController");

                    b.ToTable("DB_SECURITY_ACTION", (string)null);
                });

            modelBuilder.Entity("DevNot2021.Entities.DbSecurityController", b =>
                {
                    b.Property<int>("IdSecurityController")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSecurityController"), 1L, 1);

                    b.Property<string>("Client")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ClientIp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ControllerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CreUser")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.HasKey("IdSecurityController");

                    b.ToTable("DB_SECURITY_CONTROLLER", (string)null);
                });

            modelBuilder.Entity("DevNot2021.Entities.DbSecurityRole", b =>
                {
                    b.Property<int>("IdSecurityRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSecurityRole"), 1L, 1);

                    b.Property<string>("Client")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ClientIp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CreUser")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("SecurityRoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdSecurityRole");

                    b.ToTable("DB_SECURITY_ROLE", (string)null);
                });

            modelBuilder.Entity("DevNot2021.Entities.DbSecurityUserAction", b =>
                {
                    b.Property<int>("IdSecurityUserAction")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSecurityUserAction"), 1L, 1);

                    b.Property<long?>("ActionNumberTotal")
                        .HasColumnType("bigint");

                    b.Property<string>("Client")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ClientIp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CreUser")
                        .HasColumnType("int");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("IdSecurityController")
                        .HasColumnType("int");

                    b.Property<int?>("IdUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.HasKey("IdSecurityUserAction");

                    b.HasIndex("IdSecurityController");

                    b.HasIndex("IdUser");

                    b.ToTable("DB_SECURITY_USER_ACTION", (string)null);
                });

            modelBuilder.Entity("DevNot2021.Entities.DbSecurityUserRole", b =>
                {
                    b.Property<int>("IdSecurityUserRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSecurityUserRole"), 1L, 1);

                    b.Property<long?>("ActionNumberTotal")
                        .HasColumnType("bigint");

                    b.Property<string>("Client")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ClientIp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CreUser")
                        .HasColumnType("int");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("IdSecurityController")
                        .HasColumnType("int");

                    b.Property<int>("IdSecurityRole")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.HasKey("IdSecurityUserRole");

                    b.HasIndex("IdSecurityController");

                    b.HasIndex("IdSecurityRole");

                    b.ToTable("DB_SECURITY_USER_ROLE", (string)null);
                });

            modelBuilder.Entity("DevNot2021.Entities.DbUser", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"), 1L, 1);

                    b.Property<string>("Client")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ClientIp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CreUser")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Gsm")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("IdSecurityRole")
                        .HasColumnType("int");

                    b.Property<bool?>("IsAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRoleLock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<long?>("TotalCompanyNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdUser");

                    b.HasIndex("IdSecurityRole");

                    b.ToTable("DB_USER", (string)null);
                });

            modelBuilder.Entity("DevNot2021.Entities.DbUser2", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"), 1L, 1);

                    b.Property<string>("Client")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ClientIp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CreUser")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Gsm")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("IdSecurityRole")
                        .HasColumnType("int");

                    b.Property<bool?>("IsAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdUser");

                    b.HasIndex("IdSecurityRole");

                    b.ToTable("DB_USER2", (string)null);
                });

            modelBuilder.Entity("DevNot2021.Entities.DbUser2017", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"), 1L, 1);

                    b.Property<string>("Client")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ClientIp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CreUser")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Gsm")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("IdSecurityRole")
                        .HasColumnType("int");

                    b.Property<bool?>("IsAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdUser");

                    b.HasIndex("IdSecurityRole");

                    b.ToTable("DB_USER2017", (string)null);
                });

            modelBuilder.Entity("DevNot2021.Entities.DbUser2018", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"), 1L, 1);

                    b.Property<string>("Client")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ClientIp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CreUser")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Gsm")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("IdSecurityRole")
                        .HasColumnType("int");

                    b.Property<bool?>("IsAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdUser");

                    b.HasIndex("IdSecurityRole");

                    b.ToTable("DB_USER2018", (string)null);
                });

            modelBuilder.Entity("DevNot2021.Entities.DbUser2019", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"), 1L, 1);

                    b.Property<string>("Client")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ClientIp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CreUser")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Gsm")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("IdSecurityRole")
                        .HasColumnType("int");

                    b.Property<bool?>("IsAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdUser");

                    b.HasIndex("IdSecurityRole");

                    b.ToTable("DB_USER2019", (string)null);
                });

            modelBuilder.Entity("DevNot2021.Entities.DbUserMenu", b =>
                {
                    b.Property<int>("IdUserMenu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUserMenu"), 1L, 1);

                    b.Property<string>("Client")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ClientIp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CreUser")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("IdMenu")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.HasKey("IdUserMenu");

                    b.ToTable("DB_USER_MENU", (string)null);
                });

            modelBuilder.Entity("DevNot2021.Entities.GnBolge", b =>
                {
                    b.Property<int>("IdBolge")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBolge"), 1L, 1);

                    b.Property<string>("BolgeAdi")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("BolgeKodu")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("EfaturaIban")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirmaAdi")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("FirmaKisaAdi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Vkn")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("IdBolge");

                    b.ToTable("GN_BOLGE", (string)null);
                });

            modelBuilder.Entity("DevNot2021.Entities.GnSozlesmeTipi", b =>
                {
                    b.Property<int>("IdSozlesmeTipi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSozlesmeTipi"), 1L, 1);

                    b.Property<string>("SozlesmeTipiAdi")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SozlesmeTipiKodu")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.HasKey("IdSozlesmeTipi");

                    b.ToTable("GN_SOZLESME_TIPI", (string)null);
                });

            modelBuilder.Entity("DevNot2021.Entities.LogTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("RowId")
                        .HasColumnType("int");

                    b.Property<int?>("TableId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LogTable");
                });

            modelBuilder.Entity("DevNot2021.Entities.RoleGroups", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("GroupName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Id");

                    b.ToTable("RoleGroups");
                });

            modelBuilder.Entity("DevNot2021.Entities.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("GroupID");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<long?>("RoleId")
                        .HasColumnType("bigint")
                        .HasColumnName("RoleID");

                    b.Property<string>("RoleName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("DevNot2021.Entities.UserRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("RoleGroupId")
                        .HasColumnType("int")
                        .HasColumnName("RoleGroupID");

                    b.Property<long?>("Roles")
                        .HasColumnType("bigint");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id");

                    b.HasIndex("RoleGroupId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("DevNot2021.Entities.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Gsm")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("IsAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DevNot2021.Entities.ViewAbone", b =>
                {
                    b.Property<decimal>("AboneNo")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("FirmaKisaAdi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("KismiOdemeYapabilir")
                        .HasColumnType("bit");

                    b.Property<bool>("MalSahibi")
                        .HasColumnType("bit");

                    b.Property<bool>("ResmiDaire")
                        .HasColumnType("bit");

                    b.Property<decimal>("SozlesmeNo")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("SozlesmeTipiAdi")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.ToView("VIEW_ABONE");
                });

            modelBuilder.Entity("DevNot2021.Entities.AbAbone", b =>
                {
                    b.HasOne("DevNot2021.Entities.AbAboneTipi", "IdAboneTipiNavigation")
                        .WithMany("AbAbone")
                        .HasForeignKey("IdAboneTipi")
                        .IsRequired()
                        .HasConstraintName("FK_AB_ABONE_TIPI_IdAboneTipi");

                    b.HasOne("DevNot2021.Entities.GnBolge", "IdBolgeNavigation")
                        .WithMany("AbAbone")
                        .HasForeignKey("IdBolge")
                        .IsRequired()
                        .HasConstraintName("FK_GN_BOLGE_IdBolge");

                    b.HasOne("DevNot2021.Entities.GnSozlesmeTipi", "IdSozlesmeTipiNavigation")
                        .WithMany("AbAbone")
                        .HasForeignKey("IdSozlesmeTipi")
                        .IsRequired()
                        .HasConstraintName("FK_GN_SOZLESME_TIPI_IdSozlesmeTipi");

                    b.Navigation("IdAboneTipiNavigation");

                    b.Navigation("IdBolgeNavigation");

                    b.Navigation("IdSozlesmeTipiNavigation");
                });

            modelBuilder.Entity("DevNot2021.Entities.DbSecurityAction", b =>
                {
                    b.HasOne("DevNot2021.Entities.DbSecurityController", "IdSecurityControllerNavigation")
                        .WithMany("DbSecurityAction")
                        .HasForeignKey("IdSecurityController")
                        .HasConstraintName("FK_DB_SECURITY_ACTION_DB_SECURITY_CONTROLLER");

                    b.Navigation("IdSecurityControllerNavigation");
                });

            modelBuilder.Entity("DevNot2021.Entities.DbSecurityUserAction", b =>
                {
                    b.HasOne("DevNot2021.Entities.DbSecurityController", "IdSecurityControllerNavigation")
                        .WithMany("DbSecurityUserAction")
                        .HasForeignKey("IdSecurityController")
                        .HasConstraintName("FK_DB_SECURITY_USER_ACTION_DB_SECURITY_CONTROLLER");

                    b.HasOne("DevNot2021.Entities.DbUser", "IdUserNavigation")
                        .WithMany("DbSecurityUserAction")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("FK_DB_SECURITY_USER_ACTION_DB_USER");

                    b.Navigation("IdSecurityControllerNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("DevNot2021.Entities.DbSecurityUserRole", b =>
                {
                    b.HasOne("DevNot2021.Entities.DbSecurityController", "IdSecurityControllerNavigation")
                        .WithMany("DbSecurityUserRole")
                        .HasForeignKey("IdSecurityController")
                        .HasConstraintName("FK_DB_SECURITY_USER_ROLE_DB_SECURITY_CONTROLLER");

                    b.HasOne("DevNot2021.Entities.DbSecurityRole", "IdSecurityRoleNavigation")
                        .WithMany("DbSecurityUserRole")
                        .HasForeignKey("IdSecurityRole")
                        .IsRequired()
                        .HasConstraintName("FK_DB_SECURITY_USER_ROLE_DB_SECURITY_ROLE");

                    b.Navigation("IdSecurityControllerNavigation");

                    b.Navigation("IdSecurityRoleNavigation");
                });

            modelBuilder.Entity("DevNot2021.Entities.DbUser", b =>
                {
                    b.HasOne("DevNot2021.Entities.DbSecurityRole", "IdSecurityRoleNavigation")
                        .WithMany("DbUser")
                        .HasForeignKey("IdSecurityRole")
                        .HasConstraintName("FK_DB_USER_DB_SECURITY_ROLE");

                    b.Navigation("IdSecurityRoleNavigation");
                });

            modelBuilder.Entity("DevNot2021.Entities.DbUser2", b =>
                {
                    b.HasOne("DevNot2021.Entities.DbSecurityRole", "IdSecurityRoleNavigation")
                        .WithMany("DbUser2")
                        .HasForeignKey("IdSecurityRole")
                        .HasConstraintName("FK_DB_USER2_DB_SECURITY_ROLE");

                    b.Navigation("IdSecurityRoleNavigation");
                });

            modelBuilder.Entity("DevNot2021.Entities.DbUser2017", b =>
                {
                    b.HasOne("DevNot2021.Entities.DbSecurityRole", "IdSecurityRoleNavigation")
                        .WithMany("DbUser2017")
                        .HasForeignKey("IdSecurityRole")
                        .HasConstraintName("FK_DB_USER2017_DB_SECURITY_ROLE");

                    b.Navigation("IdSecurityRoleNavigation");
                });

            modelBuilder.Entity("DevNot2021.Entities.DbUser2018", b =>
                {
                    b.HasOne("DevNot2021.Entities.DbSecurityRole", "IdSecurityRoleNavigation")
                        .WithMany("DbUser2018")
                        .HasForeignKey("IdSecurityRole")
                        .HasConstraintName("FK_DB_USER2018_DB_SECURITY_ROLE");

                    b.Navigation("IdSecurityRoleNavigation");
                });

            modelBuilder.Entity("DevNot2021.Entities.DbUser2019", b =>
                {
                    b.HasOne("DevNot2021.Entities.DbSecurityRole", "IdSecurityRoleNavigation")
                        .WithMany("DbUser2019")
                        .HasForeignKey("IdSecurityRole")
                        .HasConstraintName("FK_DB_USER2019_DB_SECURITY_ROLE");

                    b.Navigation("IdSecurityRoleNavigation");
                });

            modelBuilder.Entity("DevNot2021.Entities.Roles", b =>
                {
                    b.HasOne("DevNot2021.Entities.RoleGroups", "Group")
                        .WithMany("Roles")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK_Roles_RoleGroups");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("DevNot2021.Entities.UserRoles", b =>
                {
                    b.HasOne("DevNot2021.Entities.RoleGroups", "RoleGroup")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleGroupId")
                        .HasConstraintName("FK_UserRoles_RoleGroups");

                    b.HasOne("DevNot2021.Entities.Users", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserRoles_Users");

                    b.Navigation("RoleGroup");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DevNot2021.Entities.AbAboneTipi", b =>
                {
                    b.Navigation("AbAbone");
                });

            modelBuilder.Entity("DevNot2021.Entities.DbSecurityController", b =>
                {
                    b.Navigation("DbSecurityAction");

                    b.Navigation("DbSecurityUserAction");

                    b.Navigation("DbSecurityUserRole");
                });

            modelBuilder.Entity("DevNot2021.Entities.DbSecurityRole", b =>
                {
                    b.Navigation("DbSecurityUserRole");

                    b.Navigation("DbUser");

                    b.Navigation("DbUser2");

                    b.Navigation("DbUser2017");

                    b.Navigation("DbUser2018");

                    b.Navigation("DbUser2019");
                });

            modelBuilder.Entity("DevNot2021.Entities.DbUser", b =>
                {
                    b.Navigation("DbSecurityUserAction");
                });

            modelBuilder.Entity("DevNot2021.Entities.GnBolge", b =>
                {
                    b.Navigation("AbAbone");
                });

            modelBuilder.Entity("DevNot2021.Entities.GnSozlesmeTipi", b =>
                {
                    b.Navigation("AbAbone");
                });

            modelBuilder.Entity("DevNot2021.Entities.RoleGroups", b =>
                {
                    b.Navigation("Roles");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("DevNot2021.Entities.Users", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
